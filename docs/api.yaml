# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: SE350 PROJECT 3 API
  description: api of SE350
  version: "1.0.0"
# the domain of the service
host: api.codingfish.com
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
produces:
  - application/json
paths:
  /user:
    get:
      summary: get user list
      tags:
        - User
        - broker
      responses:
        200:
          description: Return an array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /user/{id}:
    get:
      summary: get a specific user
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          type: integer
          format: ia32
      tags:
        - User
        - broker
      responses:
        200:
          description: Return an object of user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /me:
    get:
      summary: get a specific user
      tags:
        - User
        - broker
      responses:
        200:
          description: Return an object of user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /user/login:
    post:
      summary: user login
      parameters:
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - User
        - trader
        - broker
      responses:
        200:
          description: login success
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /user/signup:
    post:
      summary: user sign up
      parameters:
        - name: user
          in: body
          description: user object
          required: true
          schema:
            $ref: '#/definitions/User'
      tags:
        - User
        - trader
      responses:
        201:
          description: signup success
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /product:
    get:
      summary: get product list
      tags:
        - Product
        - broker
      responses:
        200:
          description: get product list
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: broker create product
      parameters:
        - name: product
          in: body
          description: broker create product
          required: true
          schema:
            $ref: '#/definitions/Product'
      tags:
        - Product
        - broker
      responses:
        201:
          description: create success
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /product/{id}:
    delete:
      summary: broker delete product
      parameters:
        - name: id
          in: path
          description: product id
          required: true
          type: integer
      tags:
        - Product
        - broker
      responses:
        200:
          description: delete success
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /order:
    get:
      summary: get a list of order
      tags:
        - Order
        - trader
      responses:
        200:
          description: return orders
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: create a new order
      parameters:
        - name: order
          in: body
          required: true
          schema:
            $ref: '#/definitions/Order'
      tags:
        - Order
        - broker
        - trader
      responses:
        201:
          description: create success
          schema:
            $ref: '#/definitions/Order'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      password:
        type: string

  Product:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      code:
        type: string
      unit:
        type: string
      type:
        type: string
      isDeleted:
        type: boolean

  Order:
    type: object
    properties:
      id:
        type: integer
        format: int32
      traderId:
        type: integer
      s_b:
        type: string
      type:
        type: string
      status:
        type: string
      productId:
        type: integer
      amount:
        type: number
        format: double
      stopPrice:
        type: number
        format: double
      price:
        type: number
        format: double
      remain:
        type: number
        format: double
      createdTime:
        type: integer
        format: int32
        description: unix timestamp

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
